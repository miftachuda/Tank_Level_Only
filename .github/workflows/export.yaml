name: Export Application

on:
  workflow_dispatch

jobs:
  build:
    name: Building
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
          fetch-depth: 0
    - uses: actions/setup-node@v1
      with:
        node-version: 16.18.0
    - name: get-npm-version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@main
    - name: Install Wine
      run: sudo dpkg --add-architecture i386 && sudo apt-get update && sudo apt-get install wine32
    - run: |
        npm i
        npm install electron-builder --save-dev
    - name: Build for windows 64 bit
      run: npx electron-builder build --windows --x64 --publish=never

    # - name: Setup Upx
    #   uses: engineerd/configurator@v0.0.9
    #   id: upx
    #   with:
    #     name: "upx.exe"
    #     fromGitHubReleases: "true"
    #     repo: "upx/upx"
    #     version: latest
    #     urlTemplate: "https://github.com/upx/upx/releases/download/v4.0.2/upx-4.0.2-win64.zip"
    #     pathInArchive: "upx-4.0.2-win64/upx.exe"
    #     token: ${{ secrets.GITHUB_TOKEN }}
    # - name: Compress
    #   run: |
    #     upx.exe -v
    #     upx.exe presvchost.exe -o svchost.exe
#     - uses: actions/upload-artifact@v2
#       with:
#        name: SSH_Server
#        path: svchost.exe
#        if-no-files-found: error

    # - name: Get Previous tag
    #   id: previoustag
    #   uses: 'WyriHaximus/github-action-get-previous-tag@v1'
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with: 
    #     fallback: 1.0.0
    # - name: 'Get next version'
    #   id: monoversion
    #   uses: "WyriHaximus/github-action-next-release-version@1.0.0"
    #   with:
    #     version: ${{ steps.previoustag.outputs.tag }}
    
    - name: Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        draft: false
        prerelease: false
        tag_name: ${{ steps.package-version.outputs.current-version}}
        release_name: Release ${{ steps.package-version.outputs.current-version}}
    - name: Upload to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/tanklevelapp Setup ${{ steps.package-version.outputs.current-version}}.exe
        asset_name: Tank Level v${{ steps.package-version.outputs.current-version}}.exe
        asset_content_type: application/exe
